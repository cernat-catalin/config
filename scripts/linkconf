#!/usr/bin/env bash

ALACRITTY_DIR=$(eval echo "~/.config/alacritty")
BIN_DIR=$(eval echo "~/.local/bin")
IDEAVIM_FILE=$(eval echo "~/.ideavimrc")
NVIM_DIR=$(eval echo "~/.config/nvim")
REPO_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" ; cd .. ; pwd -P)
SKHD_DIR=$(eval echo "~/.config/skhd")
TMUX_FILE=$(eval echo "~/.tmux.conf")
YABAI_DIR=$(eval echo "~/.config/yabai")
ZSH_FILE=$(eval echo "~/.zshrc")
ZSH_PICNIC_FILE=$(eval echo "~/.picnicrc")


UNAME_OUTPUT="$(uname -s)"
case "${UNAME_OUTPUT}" in
    Linux*)     MACHINE=Linux;;
    Darwin*)    MACHINE=Mac;;
    CYGWIN*)    MACHINE=Cygwin;;
    MINGW*)     MACHINE=MinGw;;
    *)          MACHINE="UNKNOWN:${UNAME_OUTPUT}"
esac


CONFIRMED=0
ask_for_confirmation() {
    printf "${1}\nConfirm[Yy]:"
    read
    if [[ ${REPLY} =~ ^[Yy]$ ]]; then
        CONFIRMED=1
    else
        CONFIRMED=0
    fi
}

ask_for_confirmation_with_exit() {
    local name=${1}
    ask_for_confirmation "\nAre you sure you want to link ${name}? This operation will fail if ${name} is already linked."
    if [[ ${CONFIRMED} == 0 ]]; then
        printf "Aborting...\n"
        exit 0
    fi
}

link() {
    ask_for_confirmation_with_exit ${1}
    local source=${1}
    local target=${2}

    if [[ (-f ${target} || -d ${target}) && ! (-L ${target}) ]]; then
        echo "[ERROR] There exists a file or directory at ${target}"
        exit 1
    fi

    if [[ -L ${target} ]]; then
        echo "[WARNING] Symlink already present at ${target}"
    else
        (set -x; ln -s ${source} ${target})
    fi
}


if [[ ${1} == "nvim" ]]; then
    link ${REPO_DIR}/nvim/user ${NVIM_DIR}/lua/user

elif [[ ${1} == "ideavim" ]]; then
    link ${REPO_DIR}/intellij/.ideavimrc ${IDEAVIM_FILE}

elif [[ ${1} == "zsh" ]]; then
    link ${REPO_DIR}/zsh/.zshrc ${ZSH_FILE}
    link ${REPO_DIR}/picnic-config/zsh/.picnicrc ${ZSH_PICNIC_FILE}

elif [[ ${1} == "tmux" ]]; then
    link ${REPO_DIR}/tmux/.tmux.conf ${TMUX_FILE}

elif [[ ${1} == "alacritty" ]]; then
    link ${REPO_DIR}/alacritty ${ALACRITTY_DIR}

elif [[ ${1} == "yabai" ]]; then
    link ${REPO_DIR}/yabai ${YABAI_DIR}

elif [[ ${1} == "skhd" ]]; then
    link ${REPO_DIR}/skhd ${SKHD_DIR}

elif [[ ${1} == "bin" ]]; then
    for file in "${REPO_DIR}/bin"/* "${REPO_DIR}/picnic-config/bin"/* ; do
        link ${file} "${BIN_DIR}/$(basename ${file})"
    done
else
    printf "\nInvalid argument. Usage: linkconf <toolname>\n\n"
    printf "Supported tools:\n"
    printf "  - alacritty   Alacritty\n"
    printf "  - bin         Bin files (useful bins utilities)\n"
    printf "  - ideavim     Intellij IdeaVim\n"
    printf "  - nvim        Neovim (Astrovim)\n"
    printf "  - skhd        Skhd\n"
    printf "  - tmux        Tmux\n"
    printf "  - yabai       Yabai\n"
    printf "  - zsh         Zsh\n"
fi
